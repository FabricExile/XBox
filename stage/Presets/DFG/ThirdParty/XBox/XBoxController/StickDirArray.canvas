// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* Get the direction the stick is pushed in (if any).\n\n* This is a useful utility function for when the stick should be treated as a simple\n* directional pad, such as for menu UIs.\n\n* \\param device The device to check.\n* \\param stick The trigger to check.\n* \\returns The stick's current direction.\n\n\n Supported by XBoxController"
    },
  "title" : "StickDir[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "XBoxController[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "XBOX_GAMEPAD_STICK[]" : [
          0
          ]
        },
      "name" : "stick",
      "execPortType" : "In",
      "typeSpec" : "XBOX_GAMEPAD_STICK[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "result",
      "execPortType" : "Out",
      "typeSpec" : "XBOX_GAMEPAD_STICKDIR[]"
      }
    ],
  "extDeps" : {
    "XBox" : "*"
    },
  "presetGUID" : "7B9BD7487C2A4FA2B9C67C3A5B7CE367",
  "code" : "require XBox;\n\noperator XBox_XBoxController_stickDir_task<<<index>>>(\n  io XBOX_GAMEPAD_STICKDIR[] result\n, in XBoxController[] this\n, in XBOX_GAMEPAD_STICK[] stick\n) {\n  result[index] = this[index < this.size() ? index : this.size() - 1].stickDir(stick[index < stick.size() ? index : stick.size() - 1]);\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  if( stick.size() == 0) return;\n  Size task_size = this.size();\n  if(task_size < stick.size()) task_size = stick.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      XBox_XBoxController_stickDir_task(index, result, this, stick);\n    }\n  } else {\n    XBox_XBoxController_stickDir_task<<<task_size>>>(result, this, stick);\n  }\n}\n"
  }