// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* Query the magnitude of an analog stick.\n\n* This returns the normalized value of the magnitude of the stick.  That is,\n* if the stick is pushed all the way in any direction, it returns 1.0.\n\n* \\param device The device to check.\n* \\param stick The stick to check.\n* \\returns The magnitude of the stick (0 to 1).\n\nSupported types:\n  this: XBoxController\n  stick: XBOX_GAMEPAD_STICK\n  result: Float32\n"
    },
  "title" : "StickLength[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "XBoxController[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "XBOX_GAMEPAD_STICK[]" : [
          0
          ]
        },
      "name" : "stick",
      "execPortType" : "In",
      "typeSpec" : "XBOX_GAMEPAD_STICK[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "result",
      "execPortType" : "Out",
      "typeSpec" : "Float32[]"
      }
    ],
  "extDeps" : {
    "XBox" : "*"
    },
  "presetGUID" : "F6B2D54D6E6CAAC5AC6C8C7DDBE5A94F",
  "code" : "require XBox;

operator XBox_XBoxController_stickLength_task<<<index>>>(
  io Float32[] result
, in XBoxController[] this
, in XBOX_GAMEPAD_STICK[] stick
) {
  result[index] = this[index < this.size() ? index : this.size() - 1].stickLength(stick[index < stick.size() ? index : stick.size() - 1]);
}

dfgEntry {
  if( this.size() == 0) return;
  if( stick.size() == 0) return;
  Size task_size = this.size();
  if(task_size < stick.size()) task_size = stick.size();
  result.resize(task_size);
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      XBox_XBoxController_stickLength_task(index, result, this, stick);
    }
  } else {
    XBox_XBoxController_stickLength_task<<<task_size>>>(result, this, stick);
  }
}
"
  }