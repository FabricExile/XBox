[FABRIC:MT] Fabric Engine version 2.0.1
[FABRIC:MT] Loading DFG presets from e:\zeuxis\stage\Windows\x86_64\Release\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\zeuxis\Test\Canvas\Presets
[FABRIC:MT] Loading DFG presets from c:\Users\helge\Fabric\Presets
[FABRIC:MT] Loading DFG presets from e:\exts\Midi\stage\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\exts\RazerHydra\stage\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\exts\Xbox\stage\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\exts\LeapMotion\stage\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\exts\Oculus\stage\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\exts\OculusRTR\stage\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\exts\XsensMvn\stage\Presets\DFG
[FABRIC:MT] Loading DFG presets from e:\exts\XsensMt\stage\Presets\DFG
[FABRIC:MT] DFG preset directory 'e:\exts\XsensMt\stage\Presets\DFG': unable to open directory 'e:\exts\XsensMt\stage\Presets\DFG': The system cannot find the path specified. (code 3 [0x3])
[FABRIC:MT] Loading DFG presets from e:\exts\RhinoFBXConverter\stage\Presets\DFG
[FABRIC:MT] Registered extensions {Adaptors:1.0.0,Alembic:1.0.0,AlembicToSceneGraph:1.0.0,AlembicWrapper:1.3.0,Animation:1.1.0,Bullet:1.0.1,BulletHelpers:1.0.0,Characters:1.1.0,Containers:1.1.0,DFGHelpers,FabricInterfaces:1.0.1,FabricSynchronization:1.1.0,Fbx:1.1.0,FbxToSceneGraph:1.0.0,FbxWrapper,FileIO:1.2.0,Geometry:1.2.0,Images:1.0.2,Images2:1.0.0,InlineDrawing:1.2.0,JSON:1.0.0,Manipulation:1.1.0,Math:1.2.0,FabricOBJ:1.1.0,OGLWrappers:1.0.0,FabricOGL:1.0.0,OpenImageIO:1.0.2,OSOGL:1.1.0,Parameters:1.0.0,RTR2:1.0.0,SceneAssembly:1.0.0,SceneGraph:1.0.0,SceneGraphForCanvas:1.0.0,SceneGraphToRTR:1.0.0,SceneGraphWrappers:1.0.0,SceneHub:2.0.0,Singletons:1.1.0,FabricStatistics:1.1.0,Strokes:1.0.0,Util:1.1.0,ImageProcessing,RTR,RTRAdaptors} in directory: e:\zeuxis\stage\Windows\x86_64\Release\Exts
[FABRIC:MT] Registered extensions {BadCode:2.0.1,BadInline:2.0.1,BadPrototype:2.0.1,BadVersion:2.0.1,CircularA:2.0.1,CircularB:2.0.1,FwdDeclare:2.0.1,FwdDeclNoDef:2.0.1,SetupCallback:2.0.1,UnitTest:2.0.1,VersionTest:1.0.0,VersionTest:1.1.1,VersionTest:1.2.1} in directory: e:\zeuxis\stage\Windows\x86_64\Release\Tests\Core\Exts
[FABRIC:MT] Registered extension {Midi:1.0.0} in directory: e:\exts\Midi\stage\Exts
[FABRIC:MT] Registered extension {RazerHydra:1.0.0} in directory: e:\exts\RazerHydra\stage\Exts
[FABRIC:MT] Registered extension {XBox:1.0.0} in directory: e:\exts\Xbox\stage\Exts
[FABRIC:MT] Registered extension {LeapMotion:1.0.0} in directory: e:\exts\LeapMotion\stage\Exts
[FABRIC:MT] Registered extension {Oculus:1.0.0} in directory: e:\exts\Oculus\stage\Exts
[FABRIC:MT] Registered extension {OculusRTR:1.0.0} in directory: e:\exts\OculusRTR\stage\Exts
[FABRIC:MT] Registered extension {XsensMvn:1.0.0} in directory: e:\exts\XsensMvn\stage\Exts
[FABRIC:MT] Ignored extension directory 'e:\exts\XsensMt\stage\Exts': unable to open directory 'e:\exts\XsensMt\stage\Exts': The system cannot find the path specified. (code 3 [0x3])
[FABRIC:MT] Registered extension {RhinoFBXConverter:1.0.0} in directory: e:\exts\RhinoFBXConverter\stage\Exts
[FABRIC:MT] Ignored extension {XBox:1.0.0} in directory: stage\Exts
[FABRIC:MT] IRCache: Not pruning since last prune was less than 24 hours ago
[FABRIC:MT] Loaded extension XBox in 78.030ms (first time)
registerFunction: thisType='XBoxController' func='function XBoxController?( in XBOX_GAMEPAD_DEVICE device )'
  Added to bin[normal][XBoxController]
registerFunction: thisType='XBoxController' func='function XBoxController?()'
  Added to bin[normal][XBoxController]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.buttonDown?( in XBOX_GAMEPAD_BUTTON button )'
  Added to bin[normal][Boolean XBoxController.buttonDown]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.buttonReleased?( in XBOX_GAMEPAD_BUTTON button )'
  Added to bin[normal][Boolean XBoxController.buttonReleased]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.buttonTriggered?( in XBOX_GAMEPAD_BUTTON button )'
  Added to bin[normal][Boolean XBoxController.buttonTriggered]
registerFunction: thisType='XBoxController' func='function XBoxController.construct!( in XBOX_GAMEPAD_DEVICE device )'
  Added to bin[normal][XBoxController.construct]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.isConnected?()'
  Added to bin[normal][Boolean XBoxController.isConnected]
registerFunction: thisType='XBoxController' func='function XBoxController.setRumble?( in Float32 left, in Float32 right )'
  Added to bin[normal][XBoxController.setRumble]
registerFunction: thisType='XBoxController' func='function Float32 XBoxController.stickAngle?( in XBOX_GAMEPAD_STICK stick )'
  Added to bin[normal][Float32 XBoxController.stickAngle]
registerFunction: thisType='XBoxController' func='function XBOX_GAMEPAD_STICKDIR XBoxController.stickDir?( in XBOX_GAMEPAD_STICK stick )'
  Added to bin[normal][XBOX_GAMEPAD_STICKDIR XBoxController.stickDir]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.stickDirTriggered?( in XBOX_GAMEPAD_STICK stick, in XBOX_GAMEPAD_STICKDIR dir )'
  Added to bin[normal][Boolean XBoxController.stickDirTriggered]
registerFunction: thisType='XBoxController' func='function Float32 XBoxController.stickLength?( in XBOX_GAMEPAD_STICK stick )'
  Added to bin[normal][Float32 XBoxController.stickLength]
registerFunction: thisType='XBoxController' func='function XBoxController.stickNormXY?( in XBOX_GAMEPAD_STICK stick, io Float32 outX, io Float32 outY )'
  Added to bin[normal][XBoxController.stickNormXY]
registerFunction: thisType='XBoxController' func='function XBoxController.stickXY?( in XBOX_GAMEPAD_STICK stick, io SInt32 outX, io SInt32 outY )'
  Added to bin[normal][XBoxController.stickXY]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.triggerDown?( in XBOX_GAMEPAD_TRIGGER trigger )'
  Added to bin[normal][Boolean XBoxController.triggerDown]
registerFunction: thisType='XBoxController' func='function Float32 XBoxController.triggerLength?( in XBOX_GAMEPAD_TRIGGER trigger )'
  Added to bin[normal][Float32 XBoxController.triggerLength]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.triggerReleased?( in XBOX_GAMEPAD_TRIGGER trigger )'
  Added to bin[normal][Boolean XBoxController.triggerReleased]
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.triggerTriggered?( in XBOX_GAMEPAD_TRIGGER trigger )'
  Added to bin[normal][Boolean XBoxController.triggerTriggered]
registerFunction: thisType='XBoxController' func='function SInt32 XBoxController.triggerValue?( in XBOX_GAMEPAD_TRIGGER trigger )'
  Added to bin[normal][SInt32 XBoxController.triggerValue]
registerFunction: thisType='XBoxController' func='function XBoxController.update?()'
  Added to bin[normal][XBoxController.update]
registerFunction: thisType='XBoxController' func='function XBoxController.construct!( in XBOX_GAMEPAD_DEVICE device )'
registerFunction: thisType='XBoxController' func='function XBoxController?()'
registerFunction: thisType='XBoxController' func='function XBoxController?( in XBOX_GAMEPAD_DEVICE device )'
registerFunction: thisType='XBoxController' func='function XBoxController.update?()'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.isConnected?()'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.buttonDown?( in XBOX_GAMEPAD_BUTTON button )'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.buttonTriggered?( in XBOX_GAMEPAD_BUTTON button )'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.buttonReleased?( in XBOX_GAMEPAD_BUTTON button )'
registerFunction: thisType='XBoxController' func='function SInt32 XBoxController.triggerValue?( in XBOX_GAMEPAD_TRIGGER trigger )'
registerFunction: thisType='XBoxController' func='function Float32 XBoxController.triggerLength?( in XBOX_GAMEPAD_TRIGGER trigger )'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.triggerDown?( in XBOX_GAMEPAD_TRIGGER trigger )'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.triggerTriggered?( in XBOX_GAMEPAD_TRIGGER trigger )'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.triggerReleased?( in XBOX_GAMEPAD_TRIGGER trigger )'
registerFunction: thisType='XBoxController' func='function XBoxController.setRumble?( in Float32 left, in Float32 right )'
registerFunction: thisType='XBoxController' func='function XBoxController.stickXY?( in XBOX_GAMEPAD_STICK stick, io SInt32 outX, io SInt32 outY )'
registerFunction: thisType='XBoxController' func='function XBoxController.stickNormXY?( in XBOX_GAMEPAD_STICK stick, io Float32 outX, io Float32 outY )'
registerFunction: thisType='XBoxController' func='function Float32 XBoxController.stickLength?( in XBOX_GAMEPAD_STICK stick )'
registerFunction: thisType='XBoxController' func='function Float32 XBoxController.stickAngle?( in XBOX_GAMEPAD_STICK stick )'
registerFunction: thisType='XBoxController' func='function XBOX_GAMEPAD_STICKDIR XBoxController.stickDir?( in XBOX_GAMEPAD_STICK stick )'
registerFunction: thisType='XBoxController' func='function Boolean XBoxController.stickDirTriggered?( in XBOX_GAMEPAD_STICK stick, in XBOX_GAMEPAD_STICKDIR dir )'
processFunctions
  bin[normal][XBoxController][1] (asArray=false)
    thisType='XBoxController' code='function XBoxController?( in XBOX_GAMEPAD_DEVICE device )'
  bin[normal][XBoxController][1] (asArray=true)
    thisType='XBoxController' code='function XBoxController?( in XBOX_GAMEPAD_DEVICE device )'
  bin[normal][Boolean XBoxController.buttonDown][1] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.buttonDown?( in XBOX_GAMEPAD_BUTTON button )'
  bin[normal][Boolean XBoxController.buttonDown][1] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.buttonDown?( in XBOX_GAMEPAD_BUTTON button )'
  bin[normal][Boolean XBoxController.buttonReleased][1] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.buttonReleased?( in XBOX_GAMEPAD_BUTTON button )'
  bin[normal][Boolean XBoxController.buttonReleased][1] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.buttonReleased?( in XBOX_GAMEPAD_BUTTON button )'
  bin[normal][Boolean XBoxController.buttonTriggered][1] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.buttonTriggered?( in XBOX_GAMEPAD_BUTTON button )'
  bin[normal][Boolean XBoxController.buttonTriggered][1] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.buttonTriggered?( in XBOX_GAMEPAD_BUTTON button )'
  bin[normal][XBoxController.construct][1] (asArray=false)
    thisType='XBoxController' code='function XBoxController.construct!( in XBOX_GAMEPAD_DEVICE device )'
  bin[normal][XBoxController.construct][1] (asArray=true)
    thisType='XBoxController' code='function XBoxController.construct!( in XBOX_GAMEPAD_DEVICE device )'
  bin[normal][Boolean XBoxController.isConnected][0] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.isConnected?()'
  bin[normal][Boolean XBoxController.isConnected][0] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.isConnected?()'
  bin[normal][XBoxController.setRumble][2] (asArray=false)
    thisType='XBoxController' code='function XBoxController.setRumble?( in Float32 left, in Float32 right )'
  bin[normal][XBoxController.setRumble][2] (asArray=true)
    thisType='XBoxController' code='function XBoxController.setRumble?( in Float32 left, in Float32 right )'
  bin[normal][Float32 XBoxController.stickAngle][1] (asArray=false)
    thisType='XBoxController' code='function Float32 XBoxController.stickAngle?( in XBOX_GAMEPAD_STICK stick )'
  bin[normal][Float32 XBoxController.stickAngle][1] (asArray=true)
    thisType='XBoxController' code='function Float32 XBoxController.stickAngle?( in XBOX_GAMEPAD_STICK stick )'
  bin[normal][XBOX_GAMEPAD_STICKDIR XBoxController.stickDir][1] (asArray=false)
    thisType='XBoxController' code='function XBOX_GAMEPAD_STICKDIR XBoxController.stickDir?( in XBOX_GAMEPAD_STICK stick )'
  bin[normal][XBOX_GAMEPAD_STICKDIR XBoxController.stickDir][1] (asArray=true)
    thisType='XBoxController' code='function XBOX_GAMEPAD_STICKDIR XBoxController.stickDir?( in XBOX_GAMEPAD_STICK stick )'
  bin[normal][Boolean XBoxController.stickDirTriggered][2] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.stickDirTriggered?( in XBOX_GAMEPAD_STICK stick, in XBOX_GAMEPAD_STICKDIR dir )'
  bin[normal][Boolean XBoxController.stickDirTriggered][2] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.stickDirTriggered?( in XBOX_GAMEPAD_STICK stick, in XBOX_GAMEPAD_STICKDIR dir )'
  bin[normal][Float32 XBoxController.stickLength][1] (asArray=false)
    thisType='XBoxController' code='function Float32 XBoxController.stickLength?( in XBOX_GAMEPAD_STICK stick )'
  bin[normal][Float32 XBoxController.stickLength][1] (asArray=true)
    thisType='XBoxController' code='function Float32 XBoxController.stickLength?( in XBOX_GAMEPAD_STICK stick )'
  bin[normal][XBoxController.stickNormXY][3] (asArray=false)
    thisType='XBoxController' code='function XBoxController.stickNormXY?( in XBOX_GAMEPAD_STICK stick, io Float32 outX, io Float32 outY )'
  bin[normal][XBoxController.stickNormXY][3] (asArray=true)
    thisType='XBoxController' code='function XBoxController.stickNormXY?( in XBOX_GAMEPAD_STICK stick, io Float32 outX, io Float32 outY )'
  bin[normal][XBoxController.stickXY][3] (asArray=false)
    thisType='XBoxController' code='function XBoxController.stickXY?( in XBOX_GAMEPAD_STICK stick, io SInt32 outX, io SInt32 outY )'
  bin[normal][XBoxController.stickXY][3] (asArray=true)
    thisType='XBoxController' code='function XBoxController.stickXY?( in XBOX_GAMEPAD_STICK stick, io SInt32 outX, io SInt32 outY )'
  bin[normal][Boolean XBoxController.triggerDown][1] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.triggerDown?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][Boolean XBoxController.triggerDown][1] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.triggerDown?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][Float32 XBoxController.triggerLength][1] (asArray=false)
    thisType='XBoxController' code='function Float32 XBoxController.triggerLength?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][Float32 XBoxController.triggerLength][1] (asArray=true)
    thisType='XBoxController' code='function Float32 XBoxController.triggerLength?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][Boolean XBoxController.triggerReleased][1] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.triggerReleased?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][Boolean XBoxController.triggerReleased][1] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.triggerReleased?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][Boolean XBoxController.triggerTriggered][1] (asArray=false)
    thisType='XBoxController' code='function Boolean XBoxController.triggerTriggered?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][Boolean XBoxController.triggerTriggered][1] (asArray=true)
    thisType='XBoxController' code='function Boolean XBoxController.triggerTriggered?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][SInt32 XBoxController.triggerValue][1] (asArray=false)
    thisType='XBoxController' code='function SInt32 XBoxController.triggerValue?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][SInt32 XBoxController.triggerValue][1] (asArray=true)
    thisType='XBoxController' code='function SInt32 XBoxController.triggerValue?( in XBOX_GAMEPAD_TRIGGER trigger )'
  bin[normal][XBoxController.update][0] (asArray=false)
    thisType='XBoxController' code='function XBoxController.update?()'
  bin[normal][XBoxController.update][0] (asArray=true)
    thisType='XBoxController' code='function XBoxController.update?()'
