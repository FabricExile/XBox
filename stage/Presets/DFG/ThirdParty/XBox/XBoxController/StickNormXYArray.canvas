// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* Query the position of an analog stick as normalized values.\n\n* The values retrieved by this function represent the magnitude of the analog\n* stick in each direction.  Note that it shouldn't be possible to get full\n* magnitude in one direction unless the other direction has a magnitude of\n* zero, as the stick has a circular movement range.\n\n* \\param device The device to check.\n* \\param stick The stick to check.\n* \\param outX Pointer to float to store the X magnitude in (-1 to 1).\n* \\param outX Pointer to float to store the Y magnitude in (-1 to 1).\n\n\n Supported by XBoxController"
    },
  "title" : "StickNormXY[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "XBoxController[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "XBOX_GAMEPAD_STICK[]" : [
          0
          ]
        },
      "name" : "stick",
      "execPortType" : "In",
      "typeSpec" : "XBOX_GAMEPAD_STICK[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "IO",
      "name" : "outX",
      "execPortType" : "IO",
      "typeSpec" : "Float32[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "IO",
      "name" : "outY",
      "execPortType" : "IO",
      "typeSpec" : "Float32[]"
      }
    ],
  "extDeps" : {
    "XBox" : "*"
    },
  "presetGUID" : "81353CD28414584A7C4D28829E8A3A8A",
  "code" : "require XBox;\n\noperator XBox_XBoxController_stickNormXY_task<<<index>>>(\n  in XBoxController[] this\n, in XBOX_GAMEPAD_STICK[] stick\n, io Float32[] outX\n, io Float32[] outY\n) {\n  this[index < this.size() ? index : this.size() - 1].stickNormXY(stick[index < stick.size() ? index : stick.size() - 1], outX[index < outX.size() ? index : outX.size() - 1], outY[index < outY.size() ? index : outY.size() - 1]);\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  if( stick.size() == 0) return;\n  if( outX.size() == 0) return;\n  if( outY.size() == 0) return;\n  Size task_size = this.size();\n  if(task_size < stick.size()) task_size = stick.size();\n  outX.resize(task_size);\n  outY.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      XBox_XBoxController_stickNormXY_task(index, this, stick, outX, outY);\n    }\n  } else {\n    XBox_XBoxController_stickNormXY_task<<<task_size>>>(this, stick, outX, outY);\n  }\n}\n"
  }