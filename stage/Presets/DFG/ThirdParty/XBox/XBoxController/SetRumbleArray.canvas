// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* Set the rumble motors on/off.\n\n* To turn off the rumble effect, set values to 0 for both motors.\n\n* The left motor is the low-frequency/strong motor, and the right motor is the high-frequency/weak motor.\n\n* \\param device The device to update.\n* \\param left Left motor strengh (0 to 1).\n* \\param right Right motor strengh (0 to 1).\n\nSupported types:\n  this: XBoxController\n  left: Float32\n  right: Float32\n"
    },
  "title" : "SetRumble[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "XBoxController[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Float32[]" : [
          0
          ]
        },
      "name" : "left",
      "execPortType" : "In",
      "typeSpec" : "Float32[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Float32[]" : [
          0
          ]
        },
      "name" : "right",
      "execPortType" : "In",
      "typeSpec" : "Float32[]"
      }
    ],
  "extDeps" : {
    "XBox" : "*"
    },
  "presetGUID" : "338A363484E131AE6076333185544CAA",
  "code" : "require XBox;

operator XBox_XBoxController_setRumble_task<<<index>>>(
  in XBoxController[] this
, in Float32[] left
, in Float32[] right
) {
  this[index < this.size() ? index : this.size() - 1].setRumble(left[index < left.size() ? index : left.size() - 1], right[index < right.size() ? index : right.size() - 1]);
}

dfgEntry {
  if( this.size() == 0) return;
  if( left.size() == 0) return;
  if( right.size() == 0) return;
  Size task_size = this.size();
  if(task_size < left.size()) task_size = left.size();
  if(task_size < right.size()) task_size = right.size();
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      XBox_XBoxController_setRumble_task(index, this, left, right);
    }
  } else {
    XBox_XBoxController_setRumble_task<<<task_size>>>(this, left, right);
  }
}
"
  }